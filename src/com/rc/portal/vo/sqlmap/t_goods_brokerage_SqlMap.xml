<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="t_goods_brokerage" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.rc.portal.vo.TGoodsBrokerage" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="brokerage" property="brokerage" jdbcType="DECIMAL" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="rebate_amount" property="rebateAmount" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" >
    select id, goods_id, brokerage, weight, rebate_amount
    from t_goods_brokerage
    <isParameterPresent >
      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    select id, goods_id, brokerage, weight, rebate_amount
    from t_goods_brokerage
    where id = #id:BIGINT#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    delete from t_goods_brokerage
    where id = #id:BIGINT#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" >
    delete from t_goods_brokerage
    <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    insert into t_goods_brokerage (id, goods_id, brokerage, weight, rebate_amount)
    values (#id:BIGINT#, #goodsId:BIGINT#, #brokerage:DECIMAL#, #weight:INTEGER#,
      #rebateAmount:DECIMAL#)
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <insert id="ibatorgenerated_insertSelective" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    insert into t_goods_brokerage
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        goods_id
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        brokerage
      </isNotNull>
      <isNotNull prepend="," property="weight" >
        weight
      </isNotNull>
      <isNotNull prepend="," property="rebateAmount" >
        rebate_amount
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        #brokerage:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="weight" >
        #weight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="rebateAmount" >
        #rebateAmount:DECIMAL#
      </isNotNull>
      )
    </dynamic>
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <select id="ibatorgenerated_countByExample" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" resultClass="java.lang.Integer" >
    select count(*) from t_goods_brokerage
    <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update t_goods_brokerage
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.goodsId" >
        goods_id = #record.goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.brokerage" >
        brokerage = #record.brokerage:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.weight" >
        weight = #record.weight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.rebateAmount" >
        rebate_amount = #record.rebateAmount:DECIMAL#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update t_goods_brokerage
    set id = #record.id:BIGINT#,
      goods_id = #record.goodsId:BIGINT#,
      brokerage = #record.brokerage:DECIMAL#,
      weight = #record.weight:INTEGER#,
      rebate_amount = #record.rebateAmount:DECIMAL#
    <isParameterPresent >
      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    update t_goods_brokerage
    <dynamic prepend="set" >
      <isNotNull prepend="," property="goodsId" >
        goods_id = #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        brokerage = #brokerage:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="weight" >
        weight = #weight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="rebateAmount" >
        rebate_amount = #rebateAmount:DECIMAL#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    update t_goods_brokerage
    set goods_id = #goodsId:BIGINT#,
      brokerage = #brokerage:DECIMAL#,
      weight = #weight:INTEGER#,
      rebate_amount = #rebateAmount:DECIMAL#
    where id = #id:BIGINT#
  </update>
  <select id="selectByExampleByPage" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" >
                    select id, goods_id, brokerage, weight, rebate_amount
                    from t_goods_brokerage
                    <isParameterPresent >
                      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
                      <isNotNull property="orderByClause" >
                        order by $orderByClause$
                      </isNotNull>
                    </isParameterPresent>
					limit $pageInfo.start$ ,$pageInfo.pageSize$
  </select>

    <select id="selectListPage" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		SELECT   tt.goods_id,
	       tt.brokerage,
	       tt.short_name,
	       tt.wap_price,
	       tt.spec,
	       tt.price,
	       tt.goodsno,
	       tt.abbreviation_picture,
	       tt.type,
         tt.count,
         tt.istoday,
         max(tt.create_dt) AS  create_dt 
FROM 
(
    SELECT       
         r.goods_id,
	       r.brokerage,
	       g.short_name,
	       tgpi.price AS wap_price,
	       g.spec,
	       g.price,
	       g.goodsno,
	       g.abbreviation_picture,
	       g.type,
		     x.create_dt,	
				(SELECT COUNT(*) FROM t_lx_goods_article_brokerage AS tlxga WHERE 1 = 1
						AND tlxga.goods_id = b.goods_id 
						AND tlxga.article_id IN 
																(SELECT t.id FROM t_lx_goods_article AS t WHERE t.status = 1)) AS count,
					
        (SELECT if( g.id IN
	        (SELECT tb.goods_id FROM t_lx_goods_article_brokerage AS tb WHERE 1 = 1 AND tb.article_id IN
					(SELECT tx.id FROM t_lx_goods_article AS tx WHERE 1 = 1 AND tx.status = 1 AND tx.create_dt LIKE '%$istoday$%') 
					 GROUP BY tb.goods_id), 1, 0)) AS istoday        

		FROM t_lx_goods_article_brokerage AS b
		LEFT JOIN t_lx_goods_article AS x ON x.id = b.article_id
		LEFT JOIN t_goods_brokerage AS r ON r.goods_id = b.goods_id
		LEFT JOIN t_goods AS g ON g.id = b.goods_id 
    LEFT JOIN t_goods_price AS tgpi ON tgpi.goods_id = g.id
		WHERE 1 = 1
    AND tgpi.platform_type = '111yao'
    AND tgpi.is_show = 1
    AND tgpi.price_type = 'wap'
    AND tgpi.`status` = 1
		AND r.goods_id != ''
        AND r.brokerage != ''
        AND x.status = 1
) 
AS tt
WHERE tt.type != 2
AND tt.type != 3  
GROUP BY tt.goods_id,
	       tt.brokerage,
	       tt.short_name,
	       tt.wap_price,
	       tt.spec,
	       tt.price,
	       tt.goodsno,
	       tt.abbreviation_picture,
         tt.count,
         tt.istoday
ORDER BY  max(tt.create_dt) DESC
limit $pageInfo.start$ ,$pageInfo.end$  
   </select>
  
   <select id="selectDatas" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
		SELECT g.id,
		       b.goods_id,
		       b.brokerage,
		       g.short_name,
		       g.pc_price,
		       g.wap_price,
			     g.app_price,
		       g.spec,
		       g.price,
		       p.sales,
		       g.goodsno,
		       tlgab.good_image_url
		FROM t_goods_brokerage b
		LEFT JOIN t_goods g ON g.id = b.goods_id 
		LEFT JOIN t_goods_property p on p.goodsid = g.id 
		LEFT JOIN t_lx_goods_article_brokerage AS tlgab ON tlgab.goods_id = b.goods_id
		GROUP BY g.short_name
        limit $pageInfo.start$ ,$pageInfo.end$
   </select>
  
   <select id="searchArticleBybId" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
	SELECT ta.id,
	       ta.share_image_url, 
	       ta.title,
	       ta.share_title,
	       ta.weight,
	       DATE_FORMAT(ta.create_dt,"%Y-%m-%d") AS createdate
	FROM t_lx_goods_article AS ta 
	WHERE ta.id IN
	(SELECT tb.article_id FROM t_lx_goods_article_brokerage AS tb WHERE tb.goods_id = #bkid#)
	AND ta.`status` = 1
	ORDER BY createdate DESC
   </select>
  
  
  
  
  <select id="selectListPageCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap" >
SELECT COUNT(*) FROM
(
	SELECT   tt.goods_id,
	       tt.brokerage,
	       tt.short_name,
	       tt.wap_price,
	       tt.spec,
	       tt.price,
	       tt.goodsno,
	       tt.abbreviation_picture,
         tt.count,
         tt.istoday,
         max(tt.create_dt) AS  create_dt 
FROM 
(
    SELECT       
         r.goods_id,
	       r.brokerage,
	       g.short_name,
	       tgpi.price AS wap_price,
	       g.spec,
	       g.price,
	       g.goodsno,
	       g.abbreviation_picture,
		     x.create_dt,	
				(SELECT COUNT(*) FROM t_lx_goods_article_brokerage AS tlxga WHERE 1 = 1
						AND tlxga.goods_id = b.goods_id 
						AND tlxga.article_id IN 
																(SELECT t.id FROM t_lx_goods_article AS t WHERE t.status = 1)) AS count,
					
        (SELECT if( g.id IN
	        (SELECT tb.goods_id FROM t_lx_goods_article_brokerage AS tb WHERE 1 = 1 AND tb.article_id IN
					(SELECT tx.id FROM t_lx_goods_article AS tx WHERE 1 = 1 AND tx.status = 1 AND tx.create_dt LIKE '%$istoday$%') 
					 GROUP BY tb.goods_id), 1, 0)) AS istoday        

		FROM t_lx_goods_article_brokerage AS b
		LEFT JOIN t_lx_goods_article AS x ON x.id = b.article_id
		LEFT JOIN t_goods_brokerage AS r ON r.goods_id = b.goods_id
		LEFT JOIN t_goods AS g ON g.id = b.goods_id 
		LEFT JOIN t_goods_price AS tgpi ON tgpi.goods_id = g.id
		WHERE 1 = 1
		AND tgpi.platform_type = '111yao'
	    AND tgpi.is_show = 1
	    AND tgpi.price_type = 'wap'
	    AND tgpi.`status` = 1
		AND r.goods_id != ''
        AND r.brokerage != ''
        AND x.status = 1
) 
AS tt  
GROUP BY tt.goods_id,
	       tt.brokerage,
	       tt.short_name,
	       tt.wap_price,
	       tt.spec,
	       tt.price,
	       tt.goodsno,
	       tt.abbreviation_picture,
         tt.count,
         tt.istoday
ORDER BY  max(tt.create_dt) DESC
) AS yy
  </select>
  
    <select id="selectLeaderGoodsListDesc" resultMap="ibatorgenerated_BaseResultMap" parameterClass="java.util.HashMap" >
       SELECT * FROM t_goods_brokerage t ORDER BY t.rebate_amount DESC 
        limit 0,10
  </select> 
  
  <!--领秀药房添加商品列表-->
  <select id="selectLeaderGoodsList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
        SELECT
		  t.id as goods_id,
		  t.goodsno,
		  t.short_name,
		  t.goods_name,
		  t.abbreviation_picture,
		  IFNULL(t2.price,0) AS wap_price,
		  TRUNCATE(IFNULL(t1.rebate_amount,t2.price*4.5/100),2) AS rebate_amount  
		FROM
			t_goods t
		LEFT JOIN t_goods_brokerage t1 ON t.id = t1.goods_id
		AND t1.audit_status = 2
		LEFT JOIN t_goods_price t2 ON t.id = t2.goods_id AND t2.platform_type = '111yao' AND t2.price_type = 'wap' 
		WHERE t2.`status` =1    
        <isNotNull property="name" >
           and t.goods_name like concat('%',#name#,'%')
        </isNotNull>
        ORDER BY rebate_amount DESC
        limit $pageInfo.start$ ,$pageInfo.end$
  </select>
  
  <select id="selectLeaderGoodsListCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap" >
        select count(*) from t_goods  t left join t_goods_price AS tgp ON t.id = tgp.goods_id
        AND tgp.platform_type = '111yao'
		AND tgp.price_type = 'wap'
		WHERE tgp.status=1     
        <isNotNull property="name" >
           and t.goods_name like concat('%',#name#,'%')
        </isNotNull>
        ORDER BY t.id DESC
  </select> 
</sqlMap>
