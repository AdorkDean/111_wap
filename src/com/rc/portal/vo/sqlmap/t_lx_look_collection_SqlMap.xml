<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="t_lx_look_collection" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.rc.portal.vo.TLxLookCollection" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="relation_id" property="relationId" jdbcType="BIGINT" />
    <result column="relation_type" property="relationType" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="look_source" property="lookSource" jdbcType="INTEGER" />
    <result column="create_dt" property="createDt" jdbcType="TIMESTAMP" />
    <result column="update_dt" property="updateDt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TLxLookCollectionExample" >
    select id, relation_id, relation_type, ip, member_id, look_source, create_dt, update_dt
    from t_lx_look_collection
    <isParameterPresent >
      <include refid="t_lx_look_collection.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TLxLookCollection" >
    select id, relation_id, relation_type, ip, member_id, look_source, create_dt, update_dt
    from t_lx_look_collection
    where id = #id:BIGINT#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.rc.portal.vo.TLxLookCollection" >
    delete from t_lx_look_collection
    where id = #id:BIGINT#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.rc.portal.vo.TLxLookCollectionExample" >
    delete from t_lx_look_collection
    <include refid="t_lx_look_collection.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.rc.portal.vo.TLxLookCollection" >
    insert into t_lx_look_collection (id, relation_id, relation_type, ip, member_id, look_source,
      create_dt, update_dt)
    values (#id:BIGINT#, #relationId:BIGINT#, #relationType:INTEGER#, #ip:VARCHAR#,
      #memberId:BIGINT#, #lookSource:INTEGER#, #createDt:TIMESTAMP#, #updateDt:TIMESTAMP#)
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <insert id="ibatorgenerated_insertSelective" parameterClass="com.rc.portal.vo.TLxLookCollection" >
    insert into t_lx_look_collection
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="relationId" >
        relation_id
      </isNotNull>
      <isNotNull prepend="," property="relationType" >
        relation_type
      </isNotNull>
      <isNotNull prepend="," property="ip" >
        ip
      </isNotNull>
      <isNotNull prepend="," property="memberId" >
        member_id
      </isNotNull>
      <isNotNull prepend="," property="lookSource" >
        look_source
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        create_dt
      </isNotNull>
      <isNotNull prepend="," property="updateDt" >
        update_dt
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="relationId" >
        #relationId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="relationType" >
        #relationType:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="ip" >
        #ip:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="memberId" >
        #memberId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="lookSource" >
        #lookSource:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        #createDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="updateDt" >
        #updateDt:TIMESTAMP#
      </isNotNull>
      )
    </dynamic>
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <select id="ibatorgenerated_countByExample" parameterClass="com.rc.portal.vo.TLxLookCollectionExample" resultClass="java.lang.Integer" >
    select count(*) from t_lx_look_collection
    <include refid="t_lx_look_collection.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update t_lx_look_collection
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.relationId" >
        relation_id = #record.relationId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.relationType" >
        relation_type = #record.relationType:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.ip" >
        ip = #record.ip:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.memberId" >
        member_id = #record.memberId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.lookSource" >
        look_source = #record.lookSource:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.createDt" >
        create_dt = #record.createDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.updateDt" >
        update_dt = #record.updateDt:TIMESTAMP#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="t_lx_look_collection.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update t_lx_look_collection
    set id = #record.id:BIGINT#,
      relation_id = #record.relationId:BIGINT#,
      relation_type = #record.relationType:INTEGER#,
      ip = #record.ip:VARCHAR#,
      member_id = #record.memberId:BIGINT#,
      look_source = #record.lookSource:INTEGER#,
      create_dt = #record.createDt:TIMESTAMP#,
      update_dt = #record.updateDt:TIMESTAMP#
    <isParameterPresent >
      <include refid="t_lx_look_collection.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.rc.portal.vo.TLxLookCollection" >
    update t_lx_look_collection
    <dynamic prepend="set" >
      <isNotNull prepend="," property="relationId" >
        relation_id = #relationId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="relationType" >
        relation_type = #relationType:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="ip" >
        ip = #ip:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="memberId" >
        member_id = #memberId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="lookSource" >
        look_source = #lookSource:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        create_dt = #createDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="updateDt" >
        update_dt = #updateDt:TIMESTAMP#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.rc.portal.vo.TLxLookCollection" >
    update t_lx_look_collection
    set relation_id = #relationId:BIGINT#,
      relation_type = #relationType:INTEGER#,
      ip = #ip:VARCHAR#,
      member_id = #memberId:BIGINT#,
      look_source = #lookSource:INTEGER#,
      create_dt = #createDt:TIMESTAMP#,
      update_dt = #updateDt:TIMESTAMP#
    where id = #id:BIGINT#
  </update>
  <select id="selectByExampleByPage" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TLxLookCollectionExample" >
                    select id, relation_id, relation_type, ip, member_id, look_source, create_dt, update_dt
                    from t_lx_look_collection
                    <isParameterPresent >
                      <include refid="t_lx_look_collection.ibatorgenerated_Example_Where_Clause" />
                      <isNotNull property="orderByClause" >
                        order by $orderByClause$
                      </isNotNull>
                    </isParameterPresent>
					limit $pageInfo.start$ ,$pageInfo.pageSize$
  </select>
    <select id="selectCount_look" parameterClass="java.util.Map" resultClass="java.lang.Integer" >
		select count(l.id) from t_lx_look_collection	l where relation_type =1 and relation_id = #id#
  </select> 
</sqlMap>
